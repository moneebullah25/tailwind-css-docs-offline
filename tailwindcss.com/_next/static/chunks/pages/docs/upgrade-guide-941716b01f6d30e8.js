(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7787],{3905:function(a,e,n){"use strict";n.d(e,{Zo:function(){return o},kt:function(){return k}});var t=n(67294);function s(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function p(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})),n.push.apply(n,t)}return n}function c(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach(function(e){s(a,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach(function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))})}return a}var i=t.createContext({}),l=function(a){var e,n=t.useContext(i),s=n;return a&&(s="function"==typeof(e=a)?a(n):c(c({},n),a)),s},o=function(a){var e=l(a.components);return t.createElement(i.Provider,{value:e},a.children)},r={inlineCode:"code",wrapper:function(a){var e=a.children;return t.createElement(t.Fragment,{},e)}},m=t.forwardRef(function(a,e){var n=a.components,s=a.mdxType,p=a.originalType,i=a.parentName,o=function(a,e){if(null==a)return{};var n,t,s=function(a,e){if(null==a)return{};var n,t,s={},p=Object.keys(a);for(t=0;t<p.length;t++)n=p[t],e.indexOf(n)>=0||(s[n]=a[n]);return s}(a,e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(a);for(t=0;t<p.length;t++)n=p[t],!(e.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(a,n)&&(s[n]=a[n])}return s}(a,["components","mdxType","originalType","parentName"]),m=l(n),k=m["".concat(i,".").concat(s)]||m[s]||r[s]||p;return n?t.createElement(k,c(c({ref:e},o),{},{components:n})):t.createElement(k,c({ref:e},o))});function k(a,e){var n=arguments,s=e&&e.mdxType;if("string"==typeof a||s){var p=n.length,c=Array(p);c[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=a,i.mdxType="string"==typeof a?a:s,c[1]=i;for(var o=2;o<p;o++)c[o]=n[o];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},33594:function(a,e,n){"use strict";n.d(e,{EL:function(){return o}});var t,s=n(67294),p=["bottom","height","left","right","top","width"],c=new Map,i=function a(){var e=[];c.forEach(function(a,n){var t,s,c=n.getBoundingClientRect();t=c,s=a.rect,void 0===t&&(t={}),void 0===s&&(s={}),p.some(function(a){return t[a]!==s[a]})&&(a.rect=c,e.push(a))}),e.forEach(function(a){a.callbacks.forEach(function(e){return e(a.rect)})}),t=window.requestAnimationFrame(a)},l="undefined"!=typeof window&&window.document&&window.document.createElement?s.useLayoutEffect:s.useEffect;function o(a,e,n){"boolean"==typeof(p=e)?r=e:(r=null==(k=null==e?void 0:e.observe)||k,m=null==e?void 0:e.onChange),(o=n)&&"[object Function]"==({}).toString.call(o)&&(m=n);var p,o,r,m,k,N=(0,s.useState)(a.current),g=N[0],u=N[1],b=(0,s.useRef)(!1),d=(0,s.useRef)(!1),j=(0,s.useState)(null),O=j[0],h=j[1],f=(0,s.useRef)(m);return l(function(){f.current=m,a.current!==g&&u(a.current)}),l(function(){g&&!b.current&&(b.current=!0,h(g.getBoundingClientRect()))},[g]),l(function(){if(r){var e=g;if(d.current||(d.current=!0,e=a.current),e){var n,s,p=(n=e,s=function(a){null==f.current||f.current(a),h(a)},{observe:function(){var a=0===c.size;c.has(n)?c.get(n).callbacks.push(s):c.set(n,{rect:void 0,hasRectChanged:!1,callbacks:[s]}),a&&i()},unobserve:function(){var a=c.get(n);if(a){var e=a.callbacks.indexOf(s);e>=0&&a.callbacks.splice(e,1),a.callbacks.length||c.delete(n),c.size||cancelAnimationFrame(t)}}});return p.observe(),function(){p.unobserve()}}}},[r,g,a]),O}},97813:function(a,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/upgrade-guide",function(){return n(14091)}])},14091:function(a,e,n){"use strict";n.r(e),n.d(e,{default:function(){return g}});var t=n(99534);n(67294);var s,p=n(3905),c=n(41664),i=n.n(c),l=n(59533),o=n(5679),r=n(53339),m=n(74296),k={Layout:r.L,meta:{title:"Upgrade Guide",description:"Upgrading your Tailwind CSS projects from v2 to v3."},slug:"upgrade-guide",tableOfContents:[{title:"Upgrade packages",slug:"upgrade-packages",children:[{title:"Official plugins",slug:"official-plugins",children:[]},{title:"Play CDN",slug:"play-cdn",children:[]}]},{title:"Migrating to the JIT engine",slug:"migrating-to-the-jit-engine",children:[{title:"Configure content sources",slug:"configure-content-sources",children:[]},{title:"Remove dark mode configuration",slug:"remove-dark-mode-configuration",children:[]},{title:"Remove variant configuration",slug:"remove-variant-configuration",children:[]},{title:"Replace @variants with @layer",slug:"replace-variants-with-layer",children:[]},{title:"Automatic transforms and filters",slug:"automatic-transforms-and-filters",children:[]},{title:"New opacity modifier syntax",slug:"new-opacity-modifier-syntax",children:[]}]},{title:"Color palette changes",slug:"color-palette-changes",children:[{title:"Removed color aliases",slug:"removed-color-aliases",children:[]},{title:"Renamed gray scales",slug:"renamed-gray-scales",children:[]}]},{title:"Class name changes",slug:"class-name-changes",children:[{title:"overflow-clip/ellipsis",slug:"overflow-clip-ellipsis",children:[]},{title:"flex-grow/shrink",slug:"flex-grow-shrink",children:[]},{title:"outline-black/white",slug:"outline-black-white",children:[]},{title:"decoration-clone/slice",slug:"decoration-clone-slice",children:[]}]},{title:"Other minor changes",slug:"other-minor-changes",children:[{title:"Separator cannot be a dash",slug:"separator-cannot-be-a-dash",children:[]},{title:"Prefix cannot be a function",slug:"prefix-cannot-be-a-function",children:[]},{title:"File modifier order reversed",slug:"file-modifier-order-reversed",children:[]},{title:"Fill and stroke use color palette",slug:"fill-and-stroke-use-color-palette",children:[]},{title:"Negative values removed",slug:"negative-values-removed",children:[]},{title:"Base layer must be present",slug:"base-layer-must-be-present",children:[]},{title:"Screens layer has been renamed",slug:"screens-layer-has-been-renamed",children:[]}]}]},N=m.X_;function g(a){var e=a.components,n=(0,t.Z)(a,["components"]);return(0,p.kt)(N,Object.assign({},k,n,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Tailwind CSS v3.0 is a major update to the framework with a brand new internal engine and as such includes a small number of breaking changes."),(0,p.kt)("p",null,"We take stability very seriously and have worked hard to make any breaking changes as painless as possible. For most projects, upgrading to Tailwind CSS v3.0 should take less than 30 minutes."),(0,p.kt)("div",{className:"aspect-w-16 aspect-h-9 my-12 rounded-lg overflow-hidden"},(0,p.kt)("iframe",{src:"https://www.youtube.com/embed/waoOK5s9ypc",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,p.kt)("p",null,"To learn more about what’s new in Tailwind CSS v3.0, read the ",(0,p.kt)(i(),{href:"/blog/tailwindcss-v3",passHref:!0},(0,p.kt)("a",null,"Tailwind CSS v3.0 announcement"))," on our blog."),(0,p.kt)("hr",null),(0,p.kt)(o.X,{level:2,id:"upgrade-packages",nextElement:{type:"paragraph"}},"Upgrade packages"),(0,p.kt)("p",null,"Update Tailwind, as well as PostCSS and autoprefixer, using npm:"),(0,p.kt)("pre",Object.assign({},{className:"language-shell"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"npm")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"install")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token parameter variable"}),"-D")," tailwindcss@latest postcss@latest autoprefixer@latest")),(0,p.kt)("p",null,"Note that Tailwind CSS v3.0 requires PostCSS 8, and no longer supports PostCSS 7. If you can’t upgrade to PostCSS 8, we recommend using ",(0,p.kt)(i(),{href:"/docs/installation",passHref:!0},(0,p.kt)("a",null,"Tailwind CLI"))," instead of installing Tailwind as a PostCSS plugin."),(0,p.kt)("p",null,"If you are using nesting in your custom CSS (in combination with a PostCSS nesting plugin), you should also ",(0,p.kt)("a",Object.assign({parentName:"p"},{href:"https://tailwindcss.com/docs/using-with-preprocessors#nesting"}),"configure the ",(0,p.kt)("inlineCode",{parentName:"a"},"tailwindcss/nesting")," plugin")," in your PostCSS configuration to ensure compatibility with Tailwind CSS v3.0."),(0,p.kt)(o.X,{level:3,id:"official-plugins",nextElement:{type:"paragraph"}},"Official plugins"),(0,p.kt)("p",null,"All of our first-party plugins have been updated for compatibility with v3.0."),(0,p.kt)("p",null,"If you’re using any of our plugins, make sure to update them all to the latest version at the same time to avoid version constraint errors."),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),"npm install -D tailwindcss@latest \\\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"code-highlight bg-code-highlight"}),"@tailwindcss/typography@latest")," \\\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"code-highlight bg-code-highlight"}),"@tailwindcss/forms@latest")," \\\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"code-highlight bg-code-highlight"}),"@tailwindcss/aspect-ratio@latest")," \\\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"code-highlight bg-code-highlight"}),"@tailwindcss/line-clamp@latest")," \\\n  postcss@latest \\\n  autoprefixer@latest")),(0,p.kt)(o.X,{level:3,id:"play-cdn",nextElement:{type:"paragraph"}},"Play CDN"),(0,p.kt)("p",null,"For Tailwind CSS v3.0, the CSS-based CDN build we’ve offered in the past has been replaced by the new ",(0,p.kt)(i(),{href:"/docs/installation/play-cdn",passHref:!0},(0,p.kt)("a",null,"Play CDN")),", which gives you the full power of the new engine right in the browser with no build step."),(0,p.kt)("p",null,"To try it out, throw this ",(0,p.kt)("inlineCode",{parentName:"p"},"<script>")," tag in your ",(0,p.kt)("inlineCode",{parentName:"p"},"<head>"),":"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token doctype punctuation"}),"<!"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token doctype doctype-tag"}),"DOCTYPE"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token doctype"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token doctype name"}),"html"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token doctype punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"html"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"lang"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"en"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"head"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"meta"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"charset"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"utf-8"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"meta"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"name"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"viewport"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"content"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"width=device-width, initial-scale=1.0"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"/>"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"title"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"Example"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"title"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"script"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"src"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"https://cdn.tailwindcss.com"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token script"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"script"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"head"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"body"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"<!-- -->"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"body"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"html"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)("p",null,"The Play CDN is designed for development purposes only — compiling your own static CSS build is a much better choice in production."),(0,p.kt)("hr",null),(0,p.kt)(o.X,{level:2,id:"migrating-to-the-jit-engine",nextElement:{type:"paragraph"}},"Migrating to the JIT engine"),(0,p.kt)("p",null,"The new ",(0,p.kt)(i(),{href:"/blog/just-in-time-the-next-generation-of-tailwind-css",passHref:!0},(0,p.kt)("a",null,"Just-in-Time engine"))," we announced in March has replaced the classic engine in Tailwind CSS v3.0."),(0,p.kt)("p",null,"The new engine generates the styles you need for your project on-demand, and might necessitate some small changes to your project depending on how you have Tailwind configured."),(0,p.kt)("p",null,"If you were already opting in to ",(0,p.kt)("inlineCode",{parentName:"p"},"mode: 'jit'")," in Tailwind CSS v2.x, you can safely remove that from your configuration in v3.0:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"mode"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'jit'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)(o.X,{level:3,id:"configure-content-sources",nextElement:{type:"paragraph"}},"Configure content sources"),(0,p.kt)("p",null,"Since Tailwind no longer uses PurgeCSS under the hood, we’ve renamed the ",(0,p.kt)("inlineCode",{parentName:"p"},"purge")," option to ",(0,p.kt)("inlineCode",{parentName:"p"},"content")," to better reflect what it’s for:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"purge"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"["),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"content"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"["),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// Example content paths..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'./public/**/*.html'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'./src/**/*.{js,jsx,ts,tsx,vue}'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"]"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)("p",null,"If you weren’t already using the ",(0,p.kt)("inlineCode",{parentName:"p"},"purge")," option in your project, it’s crucial that you configure your template paths now or your compiled CSS will be empty."),(0,p.kt)("p",null,"Since we’re not using PurgeCSS under the hood anymore, some of the advanced purge options have changed. See the new ",(0,p.kt)(i(),{href:"/docs/content-configuration",passHref:!0},(0,p.kt)("a",null,"content configuration"))," documentation for more information on advanced options."),(0,p.kt)(o.X,{level:3,id:"remove-dark-mode-configuration",nextElement:{type:"paragraph"}},"Remove dark mode configuration"),(0,p.kt)("p",null,"The dark mode feature is now enabled using the ",(0,p.kt)("inlineCode",{parentName:"p"},"media")," strategy by default, so you can remove this key entirely from your ",(0,p.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file, ",(0,p.kt)("em",{parentName:"p"},"unless")," you’re using the ",(0,p.kt)("inlineCode",{parentName:"p"},"class")," strategy."),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"darkMode"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'media'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)("p",null,"You can also safely remove this key if it’s currently set to ",(0,p.kt)("inlineCode",{parentName:"p"},"false"),":"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"darkMode"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token boolean"}),"false"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)(o.X,{level:3,id:"remove-variant-configuration",nextElement:{type:"paragraph"}},"Remove variant configuration"),(0,p.kt)("p",null,"In Tailwind CSS v3.0, every variant is automatically available for every utility by default, so you can remove the ",(0,p.kt)("inlineCode",{parentName:"p"},"variants")," section from your ",(0,p.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"variants"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"extend"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"      "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"padding"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"["),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'hover'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"]"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)(o.X,{level:3,id:"replace-variants-with-layer",nextElement:{type:"paragraph"}},"Replace @variants with @layer"),(0,p.kt)("p",null,"Since all variants are now enabled by default, you no longer need to explicity enable these for custom CSS using the ",(0,p.kt)("inlineCode",{parentName:"p"},"@variants")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"@responsive")," directives."),(0,p.kt)("p",null,"Instead, add any custom CSS to appropriate “layer” using the ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," directive:"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule rule"}),"@variants"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"})," hover"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"})," focus"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule rule"}),"@layer"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"})," utilities"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"   "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token selector class"}),".content-auto"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"     "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"content-visibility"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," auto"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"   "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n"))),(0,p.kt)("p",null,"Any custom CSS added to one of Tailwind’s layers will automatically support variants."),(0,p.kt)("p",null,"See the documentation on ",(0,p.kt)(i(),{href:"/docs/adding-custom-styles#using-css-and-layer",passHref:!0},(0,p.kt)("a",null,"adding custom styles using CSS and @layer"))," for more information."),(0,p.kt)(o.X,{level:3,id:"automatic-transforms-and-filters",nextElement:{type:"paragraph"}},"Automatic transforms and filters"),(0,p.kt)("p",null,"In Tailwind CSS v3.0, transform and filter utilities like ",(0,p.kt)("inlineCode",{parentName:"p"},"scale-50")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"brightness-75")," will automatically take effect without needing to add the ",(0,p.kt)("inlineCode",{parentName:"p"},"transform"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"filter"),", or ",(0,p.kt)("inlineCode",{parentName:"p"},"backdrop-filter")," classes:"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"transform scale-50 filter grayscale backdrop-filter backdrop-blur-sm"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"scale-50 grayscale backdrop-blur-sm"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)("p",null,"While there’s no harm in leaving them in your HTML, they can safely be removed — with one exception. If you’re relying on ",(0,p.kt)("inlineCode",{parentName:"p"},"transform")," to create a new stacking context, you may want to leave it, otherwise you may run into z-order issues. Alternatively, replace it with ",(0,p.kt)("inlineCode",{parentName:"p"},"relative")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"isolate")," to force a new stacking context."),(0,p.kt)(o.X,{level:3,id:"new-opacity-modifier-syntax",nextElement:{type:"paragraph"}},"New opacity modifier syntax"),(0,p.kt)("p",null,"The new engine introduces ",(0,p.kt)("a",Object.assign({parentName:"p"},{href:"https://tailwindcss.com/docs/background-color#changing-the-opacity"}),"a new syntax")," for changing the opacity of color utilities that we recommend migrating to from utilities like ",(0,p.kt)("inlineCode",{parentName:"p"},"bg-opacity-{value}"),":"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"bg-black bg-opacity-25"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"bg-black/25"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)("p",null,"The old approach still works in all cases except when using a ",(0,p.kt)("inlineCode",{parentName:"p"},"border-opacity-*")," utility with the default ",(0,p.kt)("inlineCode",{parentName:"p"},"border")," class — in v3 you’ll need to explicitly specify your border color:"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"border border-opacity-25"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"border border-gray-200/25"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)("p",null,"Every other situation behaves the same, so aside from that change your projects will work exactly as they did before. We do recommend using the new syntax going forward though, and plan to disable utilities like ",(0,p.kt)("inlineCode",{parentName:"p"},"border-opacity-*")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"bg-opacity-*")," by default in v4, though you will still be able to enable them if needed."),(0,p.kt)("p",null,"This new syntax works for all color utilities, even utilities that didn’t have any way to change the opacity in the past like ",(0,p.kt)("inlineCode",{parentName:"p"},"from-red-500/75"),"."),(0,p.kt)("hr",null),(0,p.kt)(o.X,{level:2,id:"color-palette-changes",nextElement:{type:"paragraph"}},"Color palette changes"),(0,p.kt)("p",null,"Tailwind CSS v3.0 now includes every color from the extended color palette by default, including previously disabled colors like cyan, rose, fuchsia, and lime, and all five variations of gray."),(0,p.kt)(o.X,{level:3,id:"removed-color-aliases",nextElement:{type:"paragraph"}},"Removed color aliases"),(0,p.kt)("p",null,"In v2.0, several of the default colors were actually aliases for the extended colors:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",Object.assign({parentName:"tr"},{align:null}),"v2 Default"),(0,p.kt)("th",Object.assign({parentName:"tr"},{align:null}),"v2 Extended"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"green")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"emerald"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"yellow")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"amber"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"purple")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"violet"))))),(0,p.kt)("p",null,"In v3.0, these colors use their extended names by default, so what was previously ",(0,p.kt)("inlineCode",{parentName:"p"},"bg-green-500")," is now ",(0,p.kt)("inlineCode",{parentName:"p"},"bg-emerald-500"),", and ",(0,p.kt)("inlineCode",{parentName:"p"},"bg-green-500")," now refers to the green from the extended palette."),(0,p.kt)("p",null,"If you’re using these colors in your project, the simplest way to upgrade is to alias them back to their previous names in your ",(0,p.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"const"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," colors "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"require"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'tailwindcss/colors'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token plain language-js unchanged"}),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"extend"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"      "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"colors"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"        "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"green"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," colors"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"emerald"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"        "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"yellow"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," colors"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"amber"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"        "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"purple"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," colors"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"violet"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"      "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)("p",null,"If you are already using a custom color palette, this change doesn’t impact you at all."),(0,p.kt)(o.X,{level:3,id:"renamed-gray-scales",nextElement:{type:"paragraph"}},"Renamed gray scales"),(0,p.kt)("p",null,"As part of enabling all of the extended colors by default, we’ve given the different gray shades shorter single-word names to make them more practical to use and make it less awkward for them to co-exist at the same time."),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",Object.assign({parentName:"tr"},{align:null}),"v2 Default"),(0,p.kt)("th",Object.assign({parentName:"tr"},{align:null}),"v2 Extended"),(0,p.kt)("th",Object.assign({parentName:"tr"},{align:null}),"v3 Unified"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),"N/A"),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"blueGray")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"slate"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"gray")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"coolGray")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"gray"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),"N/A"),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"gray")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"zinc"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),"N/A"),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"trueGray")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"neutral"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),"N/A"),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"warmGray")),(0,p.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,p.kt)("inlineCode",{parentName:"td"},"stone"))))),(0,p.kt)("p",null,"If you were referencing any of the extended grays, you should update your references to the new names, for example:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"const"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," colors "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"require"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'tailwindcss/colors'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token plain language-js unchanged"}),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"extend"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"      "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"colors"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"        "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"gray"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," colors"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"trueGray"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"        "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"gray"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," colors"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"neutral"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"      "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)("p",null,"If you weren’t referencing any of the grays from the extended color palette, this change doesn’t impact you at all."),(0,p.kt)("hr",null),(0,p.kt)(o.X,{level:2,id:"class-name-changes",nextElement:{type:"paragraph"}},"Class name changes"),(0,p.kt)("p",null,"Some class names in Tailwind CSS v3.0 have changed to avoid naming collisions, improve the developer experience, or make it possible to support new features."),(0,p.kt)("p",null,"Wherever possible we have preserved the old name as well so many of these changes are non-breaking, but you’re encouraged to update to the new class names."),(0,p.kt)(o.X,{level:3,id:"overflow-clip-ellipsis",nextElement:{type:"paragraph"}},"overflow-clip/ellipsis"),(0,p.kt)("p",null,"Those damn browser developers added a real ",(0,p.kt)("inlineCode",{parentName:"p"},"overflow: clip")," property, so using ",(0,p.kt)("inlineCode",{parentName:"p"},"overflow-clip")," for ",(0,p.kt)("inlineCode",{parentName:"p"},"text-overflow: clip")," is a really bad idea now."),(0,p.kt)("p",null,"We’ve renamed ",(0,p.kt)("inlineCode",{parentName:"p"},"overflow-clip")," to ",(0,p.kt)("inlineCode",{parentName:"p"},"text-clip"),", and renamed ",(0,p.kt)("inlineCode",{parentName:"p"},"overflow-ellipsis")," to ",(0,p.kt)("inlineCode",{parentName:"p"},"text-ellipsis")," to avoid the naming collision:"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"overflow-clip overflow-ellipsis"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"text-clip text-ellipsis"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)("p",null,"This is extremely unlikely to affect anyone, as there are very few use-cases for ",(0,p.kt)("inlineCode",{parentName:"p"},"text-clip")," and it’s only really included for the sake of completion."),(0,p.kt)(o.X,{level:3,id:"flex-grow-shrink",nextElement:{type:"paragraph"}},"flex-grow/shrink"),(0,p.kt)("p",null,"We’ve added ",(0,p.kt)("inlineCode",{parentName:"p"},"grow-*")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"shrink-*")," as aliases for ",(0,p.kt)("inlineCode",{parentName:"p"},"flex-grow-*")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"flex-shrink-*"),":"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"flex-grow-0 flex-shrink"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"grow-0 shrink"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)("p",null,"The old class names will always work but you’re encouraged to update to the new ones."),(0,p.kt)(o.X,{level:3,id:"outline-black-white",nextElement:{type:"paragraph"}},"outline-black/white"),(0,p.kt)("p",null,"Since browsers are finally starting to respect border radius when rendering outlines, we’ve added separate utilities for the ",(0,p.kt)("inlineCode",{parentName:"p"},"outline-style"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"outline-color"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"outline-width")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"outline-offset")," properties."),(0,p.kt)("p",null,"This means that ",(0,p.kt)("inlineCode",{parentName:"p"},"outline-white")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"outline-black")," now only set the outline ",(0,p.kt)("em",{parentName:"p"},"color"),", whereas in v2 they set the color, width, style, and offset."),(0,p.kt)("p",null,"If you are using ",(0,p.kt)("inlineCode",{parentName:"p"},"outline-white")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"outline-black")," in your project, you can bring back the old styles by adding the following custom CSS to your project:"),(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," utilities")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".outline-black"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"outline"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"2"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token unit"}),"px")," dotted ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token color"}),"black"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"outline-offset"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"2"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token unit"}),"px"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".outline-white"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"outline"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"2"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token unit"}),"px")," dotted ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token color"}),"white"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"outline-offset"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"2"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token unit"}),"px"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"))),(0,p.kt)("p",null,"Alternatively, you can update any usage of them in your CSS with the following classes:"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"outline-black"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"outline-black outline-2 outline-dotted outline-offset-2"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token plain language-html unchanged"}),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"outline-white"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"outline-white outline-2 outline-dotted outline-offset-2"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)(o.X,{level:3,id:"decoration-clone-slice",nextElement:{type:"paragraph"}},"decoration-clone/slice"),(0,p.kt)("p",null,"We’ve added ",(0,p.kt)("inlineCode",{parentName:"p"},"box-decoration-clone")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"box-decoration-slice")," as aliases for ",(0,p.kt)("inlineCode",{parentName:"p"},"decoration-clone")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"decoration-slice")," to avoid confusion with all of the new ",(0,p.kt)("inlineCode",{parentName:"p"},"text-decoration")," utilities that use the ",(0,p.kt)("inlineCode",{parentName:"p"},"decoration-")," namespace:"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"decoration-clone"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"box-decoration-clone"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token plain language-html unchanged"}),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"decoration-slice"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"box-decoration-slice"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"</"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)("p",null,"The old class names will always work but you’re encouraged to update to the new ones."),(0,p.kt)("hr",null),(0,p.kt)(o.X,{level:2,id:"other-minor-changes",nextElement:{type:"paragraph"}},"Other minor changes"),(0,p.kt)("p",null,"Tailwind CSS v3.0 necessitates a couple of other small breaking changes that are unlikely to affect many people, but have been captured here."),(0,p.kt)(o.X,{level:3,id:"separator-cannot-be-a-dash",nextElement:{type:"paragraph"}},"Separator cannot be a dash"),(0,p.kt)("p",null,"The dash (",(0,p.kt)("inlineCode",{parentName:"p"},"-"),") character cannot be used as a custom separator in v3.0 because of a parsing ambiguity it introduces in the engine."),(0,p.kt)("p",null,"You’ll have to switch to another character like ",(0,p.kt)("inlineCode",{parentName:"p"},"_")," instead:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"separator"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'-'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"separator"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'_'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)(o.X,{level:3,id:"prefix-cannot-be-a-function",nextElement:{type:"paragraph"}},"Prefix cannot be a function"),(0,p.kt)("p",null,"Prior to Tailwind CSS v3.0, it was possible to define your class prefix as a function:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"module",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property-access"}),"exports")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// ..."),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"prefix"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"selector"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// ..."),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"This isn’t possible in the new engine and we’ve had to remove support for this feature."),(0,p.kt)("p",null,"Instead, use a static prefix that is the same for every class Tailwind generates:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"module",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property-access"}),"exports")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// ..."),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"prefix"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'tw-'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)(o.X,{level:3,id:"file-modifier-order-reversed",nextElement:{type:"paragraph"}},"File modifier order reversed"),(0,p.kt)("p",null,"Super minor change since v3.0.0-alpha.2 where the ",(0,p.kt)("inlineCode",{parentName:"p"},"file")," modifier was introduced — if you were combining it with other modifiers like ",(0,p.kt)("inlineCode",{parentName:"p"},"hover")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"focus"),", you’ll need to flip the modifier order:"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"input"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"file:hover:bg-blue-600 ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-html inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),"<"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),"input"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value"}),"hover:file:bg-blue-600 ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag attr-value punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag punctuation"}),">"),"\n"))),(0,p.kt)("p",null,"Learn more in the ",(0,p.kt)(i(),{href:"/docs/hover-focus-and-other-states#ordering-stacked-modifiers",passHref:!0},(0,p.kt)("a",null,"ordering stacked modifiers"))," documentation."),(0,p.kt)(o.X,{level:3,id:"fill-and-stroke-use-color-palette",nextElement:{type:"paragraph"}},"Fill and stroke use color palette"),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"fill-{color}")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"stroke-{color}")," utilities mirror your ",(0,p.kt)("inlineCode",{parentName:"p"},"theme.colors")," key by default now. This isn’t a breaking change if you haven’t customized your color palette, but if you have, the ",(0,p.kt)("inlineCode",{parentName:"p"},"fill-current")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"stroke-current")," classes may not work if you don’t have ",(0,p.kt)("inlineCode",{parentName:"p"},"current")," included in your own custom color palette."),(0,p.kt)("p",null,"Add ",(0,p.kt)("inlineCode",{parentName:"p"},"current")," to your custom color palette to resolve this:"),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"colors"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"      "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"current"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'currentColor'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"      "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)(o.X,{level:3,id:"negative-values-removed",nextElement:{type:"paragraph"}},"Negative values removed"),(0,p.kt)("p",null,"The negative prefix in utilites like ",(0,p.kt)("inlineCode",{parentName:"p"},"-mx-4")," is a first class feature in Tailwind now, rather than something driven by your theme, so you can add ",(0,p.kt)("inlineCode",{parentName:"p"},"-")," in front of any utility that support negative values and it will just work."),(0,p.kt)("p",null,"The negative values have been removed from the default theme, so if you were referencing them with ",(0,p.kt)("inlineCode",{parentName:"p"},"theme()"),", you will see an error when trying to compile your CSS."),(0,p.kt)("p",null,"Use the ",(0,p.kt)("inlineCode",{parentName:"p"},"calc()")," function to update any affected code:"),(0,p.kt)("pre",Object.assign({},{className:"language-diff-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token selector class"}),".my-class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"top"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'top.-4'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"top"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"calc"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'top.4'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"*"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token number"}),"-1"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n"))),(0,p.kt)(o.X,{level:3,id:"base-layer-must-be-present",nextElement:{type:"paragraph"}},"Base layer must be present"),(0,p.kt)("p",null,"In Tailwind CSS v3.0, the ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind base")," directive must be present for utilities like transforms, filters, and shadows to work as expected."),(0,p.kt)("p",null,"If you were previously disabling Tailwind’s base styles by not including this directive, you should add it back and disable ",(0,p.kt)("inlineCode",{parentName:"p"},"preflight")," in your ",(0,p.kt)("inlineCode",{parentName:"p"},"corePlugins")," configuration instead:"),(0,p.kt)(l.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule rule"}),"@tailwind"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"})," base"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule punctuation"}),";"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule rule"}),"@tailwind"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"})," components"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule punctuation"}),";"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule rule"}),"@tailwind"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"})," utilities"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule punctuation"}),";"),"\n")))),(0,p.kt)(l.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"// ..."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"corePlugins"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"preflight"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token boolean"}),"false"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)("p",null,"This will disable Tailwind’s global base styles without affecting utilities that rely on adding their own base styles to function correctly."),(0,p.kt)(o.X,{level:3,id:"screens-layer-has-been-renamed",nextElement:{type:"paragraph"}},"Screens layer has been renamed"),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind screens")," layer has been renamed to ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind variants"),":"),(0,p.kt)(l.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"/* ... */"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css deleted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule rule"}),"@tailwind"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"})," screens"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule punctuation"}),";"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-css inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule rule"}),"@tailwind"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"})," variants"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule punctuation"}),";"),"\n")))),(0,p.kt)("p",null,"I think you are more likely to be attacked by a shark while working at your desk than you are to be affected by this change."))}g.isMDXComponent=!0,g.layoutProps=k},59533:function(a,e,n){"use strict";n.d(e,{M:function(){return p}});var t=n(85893),s=n(6774);function p(a){var e=a.filename,n=a.children;return(0,t.jsxs)("div",{className:"mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-slate-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset",children:[(0,t.jsx)(s.n,{primary:{name:e},showTabMarkers:!1}),(0,t.jsx)("div",{className:"children:my-0 children:!shadow-none children:bg-transparent",children:n})]})}},6774:function(a,e,n){"use strict";n.d(e,{n:function(){return p}});var t=n(85893),s=n(86010);function p(a){var e=a.primary,n=a.secondary,p=a.showTabMarkers,c=a.side,i=a.translucent,l=a.children;return(0,t.jsxs)("div",{className:"flex text-slate-400 text-xs leading-6",children:[(0,t.jsxs)("div",{className:"flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center",children:[e.name,(void 0===p||p)&&(e.saved?(0,t.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-slate-500 overflow-visible",children:(0,t.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}):(0,t.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}))]}),(0,t.jsxs)("div",{className:(0,s.Z)("flex-auto flex items-center bg-slate-700/50 border border-slate-500/30","left"===c?"rounded-tl lg:rounded-tr":"rounded-tl",void 0!==i&&i&&"dark:bg-slate-800/50"),children:[(void 0===n?[]:n).map(function(a){var e=a.name,n=a.open,p=a.className;return(0,t.jsx)("div",{className:(0,s.Z)("px-4 py-1 border-r border-slate-200/5",p,{italic:!(void 0===n||n)}),children:e},e)}),l&&(0,t.jsx)("div",{className:"flex-auto flex items-center justify-end px-4 space-x-4",children:l})]})]})}},53339:function(a,e,n){"use strict";n.d(e,{L:function(){return l}});var t=n(26042),s=n(85893),p=n(21744),c=n(99440),i=n(54713);function l(a){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(c.Dx,{children:a.layoutProps.meta.metaTitle||a.layoutProps.meta.title}),(0,s.jsx)(p.C,(0,t.Z)({nav:i.u},a))]})}l.nav=i.u},29815:function(a,e,n){"use strict";n.d(e,{Z:function(){return c}});var t=n(20943),s=n(13375),p=n(91566);function c(a){return function(a){if(Array.isArray(a))return(0,t.Z)(a)}(a)||(0,s.Z)(a)||(0,p.Z)(a)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}},function(a){a.O(0,[8555,2474,4713,9774,2888,179],function(){return a(a.s=97813)}),_N_E=a.O()}]);