(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4631],{72253:function(a,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/adding-custom-styles",function(){return n(66629)}])},66629:function(a,e,n){"use strict";n.r(e),n.d(e,{default:function(){return d}});var t=n(99534);n(67294);var s,p=n(3905),c=n(41664),o=n.n(c),i=n(59533),r=n(5679),m=n(53339),l=n(74296),k=n(55390),N=n(19904),u={Layout:m.L,meta:{title:"Adding Custom Styles",description:"Best practices for adding your own custom styles to Tailwind."},slug:"adding-custom-styles",tableOfContents:[{title:"Customizing your theme",slug:"customizing-your-theme",children:[]},{title:"Using arbitrary values",slug:"using-arbitrary-values",children:[{title:"Arbitrary properties",slug:"arbitrary-properties",children:[]},{title:"Arbitrary variants",slug:"arbitrary-variants",children:[]},{title:"Handling whitespace",slug:"handling-whitespace",children:[]},{title:"Resolving ambiguities",slug:"resolving-ambiguities",children:[]}]},{title:"Using CSS and @layer",slug:"using-css-and-layer",children:[{title:"Adding base styles",slug:"adding-base-styles",children:[]},{title:"Adding component classes",slug:"adding-component-classes",children:[]},{title:"Adding custom utilities",slug:"adding-custom-utilities",children:[]},{title:"Using modifiers with custom CSS",slug:"using-modifiers-with-custom-css",children:[]},{title:"Removing unused custom CSS",slug:"removing-unused-custom-css",children:[]},{title:"Using multiple CSS files",slug:"using-multiple-css-files",children:[]},{title:"Layers and per-component CSS",slug:"layers-and-per-component-css",children:[]}]},{title:"Writing plugins",slug:"writing-plugins",children:[]}]},g=l.X_;function d(a){var e=a.components,n=(0,t.Z)(a,["components"]);return(0,p.kt)(g,Object.assign({},u,n,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Often the biggest challenge when working with a framework is figuring out what you’re supposed to do when there’s something you need that the framework doesn’t handle for you."),(0,p.kt)("p",null,"Tailwind has been designed from the ground up to be extensible and customizable, so that no matter what you’re building you never feel like you’re fighting the framework."),(0,p.kt)("p",null,"This guide covers topics like customizing your design tokens, how to break out of those constraints when necessary, adding your own custom CSS, and extending the framework with plugins."),(0,p.kt)(r.X,{level:2,id:"customizing-your-theme",nextElement:{type:"paragraph"}},"Customizing your theme"),(0,p.kt)("p",null,"If you want to change things like your color palette, spacing scale, typography scale, or breakpoints, add your customizations to the ",(0,p.kt)("inlineCode",{parentName:"p"},"theme")," section of your ",(0,p.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),(0,p.kt)(i.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"module",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property-access"}),"exports")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"screens"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"sm"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'480px'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"md"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'768px'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"lg"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'976px'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"xl"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'1440px'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"colors"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'blue'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'#1fb6ff'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'pink'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'#ff49db'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'orange'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'#ff7849'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'green'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'#13ce66'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'gray-dark'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'#273444'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'gray'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'#8492a6'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'gray-light'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'#d3dce6'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"fontFamily"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"sans"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'Graphik'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'sans-serif'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"serif"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'Merriweather'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'serif'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"extend"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"spacing"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'128'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'32rem'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'144'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'36rem'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"borderRadius"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'4xl'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'2rem'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"Learn more about customizing your theme in the ",(0,p.kt)(o(),{href:"/docs/theme",passHref:!0},(0,p.kt)("a",null,"Theme Configuration"))," documentation."),(0,p.kt)("hr",null),(0,p.kt)(r.X,{level:2,id:"using-arbitrary-values",nextElement:{type:"paragraph"}},"Using arbitrary values"),(0,p.kt)("p",null,"While you can usually build the bulk of a well-crafted design using a constrained set of design tokens, once in a while you need to break out of those constraints to get things pixel-perfect."),(0,p.kt)("p",null,"When you find yourself really needing something like ",(0,p.kt)("inlineCode",{parentName:"p"},"top: 117px")," to get a background image in just the right spot, use Tailwind’s square bracket notation to generate a class on the fly with any arbitrary value:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"top-[117px]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"This is basically like inline styles, with the major benefit that you can combine it with interactive modifiers like ",(0,p.kt)("inlineCode",{parentName:"p"},"hover")," and responsive modifiers like ",(0,p.kt)("inlineCode",{parentName:"p"},"lg"),":"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"top-[117px] lg:top-[344px]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"This works for everything in the framework, including things like background colors, font sizes, pseudo-element content, and more:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"bg-[#bada55] text-[22px] before:content-['Festivus']",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"It’s even possible to use the ",(0,p.kt)(o(),{href:"/docs/functions-and-directives#theme",passHref:!0},(0,p.kt)("a",null,(0,p.kt)("inlineCode",{parentName:"p"},"theme")," function"))," to reference the design tokens in your ",(0,p.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"grid grid-cols-[fit-content(theme(spacing.32))]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)(r.X,{level:3,id:"arbitrary-properties",nextElement:{type:"paragraph"}},"Arbitrary properties"),(0,p.kt)("p",null,"If you ever need to use a CSS property that Tailwind doesn’t include a utility for out of the box, you can also use square bracket notation to write completely arbitrary CSS:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"[mask-type:luminance]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"This is ",(0,p.kt)("em",{parentName:"p"},"really")," like inline styles, but again with the benefit that you can use modifiers:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"[mask-type:luminance] hover:[mask-type:alpha]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"This can be useful for things like CSS variables as well, especially when they need to change under different conditions:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"[--scroll-offset:56px] lg:[--scroll-offset:44px]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)(r.X,{level:3,id:"arbitrary-variants",nextElement:{type:"paragraph"}},"Arbitrary variants"),(0,p.kt)("p",null,"Arbitrary ",(0,p.kt)("em",{parentName:"p"},"variants")," are like arbitrary values but for doing on-the-fly selector modification, like you can with built-in pseudo-class variants like ",(0,p.kt)("inlineCode",{parentName:"p"},"hover:{utility}")," or responsive variants like ",(0,p.kt)("inlineCode",{parentName:"p"},"md:{utility}")," but using square bracket notation directly in your HTML."),(0,p.kt)(N.E,{mdxType:"SnippetGroup"},(0,p.kt)(i.M,{filename:"HTML"},(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"ul")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"role"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"list",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  {#each items as item}\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"li")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"lg:[&:nth-child(3)]:hover:underline"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"{item}",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"li"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  {/each}\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"ul"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">"))))),(0,p.kt)(i.M,{filename:"Generated CSS"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* https://media.giphy.com/media/Sd3cd0SrUKZEyWmAlM/giphy.gif */"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@media")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"min-width"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token number"}),"1024"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token unit"}),"px"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".lg"),"\\:\\",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attribute"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"["),"\\&\\:nth-child\\(3\\)\\",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"]")),"\\",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token pseudo-class"}),":hover"),"\\",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token"}),":underline"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token pseudo-class"}),":hover"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token pseudo-class"}),":nth-child"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token n-th"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token number"}),"3")),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"text-decoration-line"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," underline",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"))))),(0,p.kt)("p",null,"Learn more in the ",(0,p.kt)(o(),{href:"/docs/hover-focus-and-other-states#using-arbitrary-variants",passHref:!0},(0,p.kt)("a",null,"arbitrary variants"))," documentation."),(0,p.kt)(r.X,{level:3,id:"handling-whitespace",nextElement:{type:"paragraph"}},"Handling whitespace"),(0,p.kt)("p",null,"When an arbitrary value needs to contain a space, use an underscore (",(0,p.kt)("inlineCode",{parentName:"p"},"_"),") instead and Tailwind will automatically convert it to a space at build-time:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"grid ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"grid-cols-[1fr_500px_2fr]"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"In situations where underscores are common but spaces are invalid, Tailwind will preserve the underscore instead of converting it to a space, for example in URLs:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"bg-[url('/what_a_rush.png')]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"In the rare case that you actually need to use an underscore but it’s ambiguous because a space is valid as well, escape the underscore with a backslash and Tailwind won’t convert it to a space:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"before:content-['hello\\_world']",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"If you’re using something like JSX where the backslash is stripped from the rendered HTML, use ",(0,p.kt)("a",Object.assign({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw"}),"String.raw()")," so the backslash isn’t treated as a JavaScript escape character:"),(0,p.kt)("pre",Object.assign({},{className:"language-jsx"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"className"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token script language-javascript"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token script-punctuation punctuation"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token known-class-name class-name"}),"String"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"raw"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token template-string"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token template-punctuation string"}),"`"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"before:content-['hello\\_world']"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token template-punctuation string"}),"`")),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token plain-text"}),"\n  <!-- ... -->\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)(r.X,{level:3,id:"resolving-ambiguities",nextElement:{type:"paragraph"}},"Resolving ambiguities"),(0,p.kt)("p",null,"Many utilities in Tailwind share a common namespace but map to different CSS properties. For example ",(0,p.kt)("inlineCode",{parentName:"p"},"text-lg")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"text-black")," both share the ",(0,p.kt)("inlineCode",{parentName:"p"},"text-")," namespace, but one is for ",(0,p.kt)("inlineCode",{parentName:"p"},"font-size")," and the other is for ",(0,p.kt)("inlineCode",{parentName:"p"},"color"),"."),(0,p.kt)("p",null,"When using arbitrary values, Tailwind can generally handle this ambiguity automatically based on the value you pass in:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- Will generate a font-size utility -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"text-[22px]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"...",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- Will generate a color utility -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"text-[#bada55]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"...",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"Sometimes it really is ambiguous though, for example when using CSS variables:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"text-[var(--my-var)]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"...",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"In these situations, you can “hint” the underlying type to Tailwind by adding a ",(0,p.kt)("a",Object.assign({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Types"}),"CSS data type")," before the value:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- Will generate a font-size utility -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"text-[length:var(--my-var)]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"...",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- Will generate a color utility -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"text-[color:var(--my-var)]",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"...",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("hr",null),(0,p.kt)(r.X,{level:2,id:"using-css-and-layer",nextElement:{type:"paragraph"}},"Using CSS and @layer"),(0,p.kt)("p",null,"When you need to add truly custom CSS rules to a Tailwind project, the easiest approach is to just add the custom CSS to your stylesheet:"),(0,p.kt)(i.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".my-custom-style"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"For more power, you can also use the ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," directive to add styles to Tailwind’s ",(0,p.kt)("inlineCode",{parentName:"p"},"base"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"components"),", and ",(0,p.kt)("inlineCode",{parentName:"p"},"utilities")," layers:"),(0,p.kt)(i.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," components")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".my-custom-style"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("details",{className:"-mt-0 mb-6 rounded-xl border px-6 py-3 prose prose-slate open:pb-5 dark:prose-dark dark:border-slate-800"},(0,p.kt)("summary",{className:"font-medium cursor-default select-none text-slate-900 dark:text-slate-200"},'Why does Tailwind group styles into "layers"?'),(0,p.kt)("p",null,"In CSS, the order of the rules in your stylesheet decides which declaration wins when two selectors have the same specificity:"),(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".btn"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"background"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token color"}),"blue"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".bg-black"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"background"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token color"}),"black"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"))),(0,p.kt)("p",null,"Here, both buttons will be black since ",(0,p.kt)("inlineCode",{parentName:"p"},".bg-black")," comes after ",(0,p.kt)("inlineCode",{parentName:"p"},".btn")," in the CSS:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"button")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"btn bg-black",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"...",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"button"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"button")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"bg-black btn",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"...",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"button"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"To manage this, Tailwind organizes the styles it generates into three different “layers” — a concept popularized by ",(0,p.kt)("a",Object.assign({parentName:"p"},{href:"https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/#what-is-itcss"}),"ITCSS"),"."),(0,p.kt)("ul",Object.assign({},{role:"list"}),(0,p.kt)("li",{parentName:"ul"},"The ",(0,p.kt)("inlineCode",{parentName:"li"},"base")," layer is for things like reset rules or default styles applied to plain HTML elements."),(0,p.kt)("li",{parentName:"ul"},"The ",(0,p.kt)("inlineCode",{parentName:"li"},"components")," layer is for class-based styles that you want to be able to override with utilities."),(0,p.kt)("li",{parentName:"ul"},"The ",(0,p.kt)("inlineCode",{parentName:"li"},"utilities")," layer is for small, single-purpose classes that should always take precedence over any other styles.")),(0,p.kt)("p",null,"Being explicit about this makes it easier to understand how your styles will interact with each other, and using the ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," directive lets you control the final declaration order while still organizing your actual code in whatever way you like.")),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," directive helps you control declaration order by automatically relocating your styles to the corresponding ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind")," directive, and also enables features like ",(0,p.kt)("a",Object.assign({parentName:"p"},{href:"#using-modifiers-with-custom-css"}),"modifiers")," and ",(0,p.kt)("a",Object.assign({parentName:"p"},{href:"#removing-unused-custom-css"}),"tree-shaking")," for your own custom CSS."),(0,p.kt)(r.X,{level:3,id:"adding-base-styles",nextElement:{type:"paragraph"}},"Adding base styles"),(0,p.kt)("p",null,"If you just want to set some defaults for the page (like the text color, background color, or font family), the easiest option is just adding some classes to the ",(0,p.kt)("inlineCode",{parentName:"p"},"html")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"body")," elements:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token doctype"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<!"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token doctype-tag"}),"doctype")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token name"}),"html"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"html")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"lang"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"en",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'))," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"text-gray-900 bg-gray-100 font-serif",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"html"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"This keeps your base styling decisions in your markup alongside all of your other styles, instead of hiding them in a separate file."),(0,p.kt)("p",null,"If you want to add your own default base styles for specific HTML elements, use the ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," directive to add those styles to Tailwind’s ",(0,p.kt)("inlineCode",{parentName:"p"},"base")," layer:"),(0,p.kt)(i.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," base")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),"h1")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule atapply"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@apply")," text-2",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token unit"}),"xl"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),"h2")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule atapply"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@apply")," text-xl",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"Use the ",(0,p.kt)(o(),{href:"/docs/functions-and-directives#theme",passHref:!0},(0,p.kt)("a",null,(0,p.kt)("inlineCode",{parentName:"p"},"theme")))," function or ",(0,p.kt)(o(),{href:"/docs/functions-and-directives#apply",passHref:!0},(0,p.kt)("a",null,(0,p.kt)("inlineCode",{parentName:"p"},"@apply")))," directive when adding custom base styles if you want to refer to any of the values defined in your ",(0,p.kt)(o(),{href:"/docs/theme",passHref:!0},(0,p.kt)("a",null,"theme")),"."),(0,p.kt)(r.X,{level:3,id:"adding-component-classes",nextElement:{type:"paragraph"}},"Adding component classes"),(0,p.kt)("p",null,"Use the ",(0,p.kt)("inlineCode",{parentName:"p"},"components")," layer for any more complicated classes you want to add to your project that you’d still like to be able to override with utility classes."),(0,p.kt)("p",null,"Traditionally these would be classes like ",(0,p.kt)("inlineCode",{parentName:"p"},"card"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"btn"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"badge"),"\xa0— that kind of thing."),(0,p.kt)(i.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," components")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".card"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"background-color"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'colors.white'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"border-radius"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'borderRadius.lg'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"padding"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'spacing.6'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"box-shadow"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'boxShadow.xl'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"By defining component classes in the ",(0,p.kt)("inlineCode",{parentName:"p"},"components")," layer, you can still use utility classes to override them when necessary:"),(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- Will look like a card, but with square corners -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"card rounded-none",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,p.kt)("p",null,"Using Tailwind you probably don’t need these types of classes as often as you think. Read our guide on ",(0,p.kt)(o(),{href:"/docs/reusing-styles",passHref:!0},(0,p.kt)("a",null,"Reusing Styles"))," for our recommendations."),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"components")," layer is also a good place to put custom styles for any third-party components you’re using:"),(0,p.kt)(i.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," components")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".select2-dropdown"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule atapply"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@apply")," rounded-b-lg shadow-md",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".select2-search"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule atapply"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@apply")," border border-gray-300 rounded",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".select2-results__group"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule atapply"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@apply")," text-lg font-bold text-gray-900",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"Use the ",(0,p.kt)(o(),{href:"/docs/functions-and-directives#theme",passHref:!0},(0,p.kt)("a",null,(0,p.kt)("inlineCode",{parentName:"p"},"theme")))," function or ",(0,p.kt)(o(),{href:"/docs/functions-and-directives#apply",passHref:!0},(0,p.kt)("a",null,(0,p.kt)("inlineCode",{parentName:"p"},"@apply")))," directive when adding custom component styles if you want to refer to any of the values defined in your ",(0,p.kt)(o(),{href:"/docs/theme",passHref:!0},(0,p.kt)("a",null,"theme")),"."),(0,p.kt)(r.X,{level:3,id:"adding-custom-utilities",nextElement:{type:"paragraph"}},"Adding custom utilities"),(0,p.kt)("p",null,"Add any of your own custom utility classes to Tailwind’s ",(0,p.kt)("inlineCode",{parentName:"p"},"utilities")," layer:"),(0,p.kt)(i.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," utilities")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".content-auto"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"content-visibility"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," auto",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"This can be useful when there’s a CSS feature you’d like to use in your project that Tailwind doesn’t include utilities for out of the box."),(0,p.kt)(r.X,{level:3,id:"using-modifiers-with-custom-css",nextElement:{type:"paragraph"}},"Using modifiers with custom CSS"),(0,p.kt)("p",null,"Any custom styles you add to Tailwind with ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," will automatically support Tailwind’s modifier syntax for handling things like hover states, responsive breakpoints, dark mode, and more."),(0,p.kt)(i.M,{filename:"CSS"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," utilities")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".content-auto"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"content-visibility"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," auto",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)(i.M,{filename:"HTML"},(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"lg:dark:content-auto"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- ... -->"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">"))))),(0,p.kt)("p",null,"Learn more about how these modifiers work in the ",(0,p.kt)(o(),{href:"/docs/hover-focus-and-other-states",passHref:!0},(0,p.kt)("a",null,"Hover, Focus, and Other States"))," documentation."),(0,p.kt)(r.X,{level:3,id:"removing-unused-custom-css",nextElement:{type:"paragraph"}},"Removing unused custom CSS"),(0,p.kt)("p",null,"Any custom styles you add to the ",(0,p.kt)("inlineCode",{parentName:"p"},"base"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"components"),", or ",(0,p.kt)("inlineCode",{parentName:"p"},"utilities")," layers will only be included in your compiled CSS if those styles are actually used in your HTML."),(0,p.kt)(i.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," components")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* This won't be included in your compiled CSS unless you actually use it */"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".card"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"If you want to add some custom CSS that should always be included, add it to your stylesheet without using the ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," directive:"),(0,p.kt)(i.M,{filename:"main.css"},(0,p.kt)("pre",Object.assign({},{className:"language-css"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* This will always be included in your compiled CSS */"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".card"))," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"))))),(0,p.kt)("p",null,"Make sure to put your custom styles where they need to go to get the precedence behavior you want. In the example above, we’ve added the ",(0,p.kt)("inlineCode",{parentName:"p"},".card")," class before ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind utilities")," to make sure utilities can still override it."),(0,p.kt)(r.X,{level:3,id:"using-multiple-css-files",nextElement:{type:"paragraph"}},"Using multiple CSS files"),(0,p.kt)("p",null,"If you are writing a lot of CSS and organizing it into multiple files, make sure those files are combined into a single stylesheet before processing them with Tailwind, or you’ll see errors about using ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," without the corresponding ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind")," directive."),(0,p.kt)("p",null,"The easiest way to do this is using the ",(0,p.kt)("a",Object.assign({parentName:"p"},{href:"https://github.com/postcss/postcss-import"}),"postcss-import")," plugin:"),(0,p.kt)(i.M,{filename:"postcss.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-diff-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-diff-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"module"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property-access"}),"exports"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"plugins"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js inserted"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string-property property"}),"'postcss-import'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"tailwindcss"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"    "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token literal-property property"}),"autoprefixer"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token operator"}),":"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})," "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),","),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"}),"  "),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),"\n"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token language-js unchanged"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token plain"})),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")))),(0,p.kt)("p",null,"Learn more in our ",(0,p.kt)(o(),{href:"/docs/using-with-preprocessors#build-time-imports",passHref:!0},(0,p.kt)("a",null,"build-time imports"))," documentation."),(0,p.kt)(r.X,{level:3,id:"layers-and-per-component-css",nextElement:{type:"paragraph"}},"Layers and per-component CSS"),(0,p.kt)("p",null,"Component frameworks like Vue and Svelte support adding per-component styles within a ",(0,p.kt)("inlineCode",{parentName:"p"},"<style>")," block that lives in each component file."),(0,p.kt)("p",null,"While you can use features like ",(0,p.kt)("inlineCode",{parentName:"p"},"@apply")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"theme")," inside component styles like this, the ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," directive will not work and you’ll see an error about ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," being used without a matching ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind")," directive:"),(0,p.kt)(k.qm,{mdxType:"TipBad"},"Don't use `@layer` in component styles"),(0,p.kt)(i.M,{filename:"Card.svelte"},(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"slot"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"slot"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"style"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token style"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token language-css"}),"\n  ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token comment"}),"/* Won't work because this file is processed in isolation */"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token atrule"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," components")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token selector"}),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"background-color"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'colors.white'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"border-radius"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'borderRadius.lg'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"padding"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'spacing.6'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"box-shadow"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'boxShadow.xl'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"style"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">"))))),(0,p.kt)("p",null,"This is because under-the-hood, frameworks like Vue and Svelte are processing every single ",(0,p.kt)("inlineCode",{parentName:"p"},"<style>")," block independently, and running your PostCSS plugin chain against each one in isolation."),(0,p.kt)("p",null,"That means if you have 10 components that each have a ",(0,p.kt)("inlineCode",{parentName:"p"},"<style>")," block, Tailwind is being run 10 separate times, and each run has zero knowledge about the other runs. Because of this, Tailwind can’t take the styles you define in a ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," and move them to the corresponding ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind")," directive, because as far as Tailwind can tell there is no ",(0,p.kt)("inlineCode",{parentName:"p"},"@tailwind")," directive to move it to."),(0,p.kt)("p",null,"One solution to this is to simply ",(0,p.kt)("em",{parentName:"p"},"not")," use ",(0,p.kt)("inlineCode",{parentName:"p"},"@layer")," inside your component styles:"),(0,p.kt)(k.Vw,{mdxType:"TipGood"},"Add your styles without using `@layer`"),(0,p.kt)(i.M,{filename:"Card.svelte"},(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"slot"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"slot"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"style"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token style"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token language-css"}),"\n  ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token selector"}),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"background-color"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'colors.white'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"border-radius"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'borderRadius.lg'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"padding"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'spacing.6'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token property"}),"box-shadow"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'boxShadow.xl'"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),"\n")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"style"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">"))))),(0,p.kt)("p",null,"You lose the ability to control the precedence of your styles, but unfortunately that’s totally out of our control because of how these tools work."),(0,p.kt)("p",null,"Our recommendation is that you just don’t use component styles like this at all and instead use Tailwind the way it’s intended to be used — as a single global stylesheet where you use the classes directly in your HTML:"),(0,p.kt)(k.Vw,{mdxType:"TipGood"},"Use Tailwind's utilities instead of component styles"),(0,p.kt)(i.M,{filename:"Card.svelte"},(0,p.kt)("pre",Object.assign({},{className:"language-html"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"'),"bg-white rounded-lg p-6 shadow-xl",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),'"')),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"slot"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"slot"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">"))))),(0,p.kt)("hr",null),(0,p.kt)(r.X,{level:2,id:"writing-plugins",nextElement:{type:"paragraph"}},"Writing plugins"),(0,p.kt)("p",null,"You can also add custom styles to your project using Tailwind’s plugin system instead of using a CSS file:"),(0,p.kt)(i.M,{filename:"tailwind.config.js"},(0,p.kt)("pre",Object.assign({},{className:"language-js"}),(0,p.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," plugin ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"require"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'tailwindcss/plugin'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),"\n\nmodule",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token property-access"}),"exports")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// ..."),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"plugins"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"plugin"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"function")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token parameter"}),(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," addBase",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," addComponents",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," addUtilities",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," theme ",(0,p.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"addBase"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'h1'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"fontSize"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'fontSize.2xl'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'h2'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"fontSize"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'fontSize.xl'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"addComponents"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'.card'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"backgroundColor"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'colors.white'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"borderRadius"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'borderRadius.lg'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"padding"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'spacing.6'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"boxShadow"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"theme"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'boxShadow.xl'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"addUtilities"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string-property property"}),"'.content-auto'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token literal-property property"}),"contentVisibility"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'auto'"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n      ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),"\n  ",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),"\n",(0,p.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,p.kt)("p",null,"Learn more about writing your own plugins in the ",(0,p.kt)(o(),{href:"/docs/plugins",passHref:!0},(0,p.kt)("a",null,"Plugins"))," documentation."))}d.isMDXComponent=!0,d.layoutProps=u},59533:function(a,e,n){"use strict";n.d(e,{M:function(){return p}});var t=n(85893),s=n(6774);function p(a){var e=a.filename,n=a.children;return(0,t.jsxs)("div",{className:"mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-slate-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset",children:[(0,t.jsx)(s.n,{primary:{name:e},showTabMarkers:!1}),(0,t.jsx)("div",{className:"children:my-0 children:!shadow-none children:bg-transparent",children:n})]})}},19904:function(a,e,n){"use strict";n.d(e,{E:function(){return r}});var t=n(85893),s=n(49808),p=n(86010),c=n(67294);function o(a){var e=a.className;return(0,t.jsx)("div",{className:(0,p.Z)("pointer-events-none absolute inset-0",e)})}function i(a){var e=a.children,n=a.selectedIndex,c=a.myIndex,i=a.marker,r=n===c,m={leading:r?null:n===c-1?"capped":"normal",trailing:r?null:n===c+1?"capped":"normal"};return(0,t.jsxs)(s.O,{className:(0,p.Z)("flex items-center relative z-10 overflow-hidden px-4 py-1 [&:not(:focus-visible)]:focus:outline-none",r?"text-sky-300":"text-slate-400"),children:[(0,t.jsx)("span",{className:"z-10",children:e}),"close"===i&&(0,t.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-slate-500 overflow-visible",children:(0,t.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}),"modified"===i&&(0,t.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}),!r&&(0,t.jsx)(o,{className:(0,p.Z)("bg-slate-700/50 border-y border-slate-500/30","capped"===m.leading&&"border-l rounded-tl","capped"===m.trailing&&"border-r rounded-tr")}),"normal"===m.trailing&&(0,t.jsx)(o,{className:"inset-y-px border-r border-slate-200/5 z-20"}),r&&(0,t.jsx)(o,{className:"border-b border-b-sky-300"})]})}function r(a){var e=a.children,n=a.actions,o=(0,c.useState)(0),r=o[0],m=o[1];return(0,t.jsxs)(s.O.Group,{as:"div",onChange:m,className:"not-prose bg-slate-800 rounded-xl shadow-md",children:[(0,t.jsxs)("div",{className:"flex",children:[(0,t.jsx)(s.O.List,{className:"flex text-slate-400 text-xs leading-6 overflow-hidden rounded-tl-xl pt-2",children:e.map(function(a,e){return(0,t.jsx)(i,{myIndex:e,selectedIndex:r,children:a.props.filename},a.props.filename)})}),(0,t.jsx)("div",{className:"flex-auto flex pt-2 rounded-tr-xl overflow-hidden",children:(0,t.jsx)("div",{className:(0,p.Z)("flex-auto flex justify-end bg-slate-700/50 border-y border-slate-500/30 pr-4",r===e.length-1?"rounded-tl border-l":"")})}),n?(0,t.jsx)("div",{className:"absolute top-2 right-4 h-8 flex",children:n({selectedIndex:r})}):null]}),(0,t.jsx)(s.O.Panels,{className:"flex overflow-auto",children:e.map(function(a){return(0,t.jsx)(s.O.Panel,{className:"flex-none min-w-full p-5 text-sm leading-6 text-slate-50 ligatures-none",children:a.props.children},a.props.filename)})})]})}},6774:function(a,e,n){"use strict";n.d(e,{n:function(){return p}});var t=n(85893),s=n(86010);function p(a){var e=a.primary,n=a.secondary,p=a.showTabMarkers,c=a.side,o=a.translucent,i=a.children;return(0,t.jsxs)("div",{className:"flex text-slate-400 text-xs leading-6",children:[(0,t.jsxs)("div",{className:"flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center",children:[e.name,(void 0===p||p)&&(e.saved?(0,t.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-slate-500 overflow-visible",children:(0,t.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}):(0,t.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}))]}),(0,t.jsxs)("div",{className:(0,s.Z)("flex-auto flex items-center bg-slate-700/50 border border-slate-500/30","left"===c?"rounded-tl lg:rounded-tr":"rounded-tl",void 0!==o&&o&&"dark:bg-slate-800/50"),children:[(void 0===n?[]:n).map(function(a){var e=a.name,n=a.open,p=a.className;return(0,t.jsx)("div",{className:(0,s.Z)("px-4 py-1 border-r border-slate-200/5",p,{italic:!(void 0===n||n)}),children:e},e)}),i&&(0,t.jsx)("div",{className:"flex-auto flex items-center justify-end px-4 space-x-4",children:i})]})]})}},55390:function(a,e,n){"use strict";n.d(e,{$o:function(){return c},Vw:function(){return s},qm:function(){return p}});var t=n(85893);function s(a){var e=a.children;return(0,t.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,t.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-cyan-500 text-white flex items-center justify-center ring-2 ring-cyan-500 dark:bg-sky-500 dark:ring-sky-500",children:[(0,t.jsx)("svg",{width:"6",height:"4.5",className:"overflow-visible","aria-hidden":"true",children:(0,t.jsx)("path",{d:"M6 0L2 4.5L0 2.5",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,t.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-cyan-500/30 rounded-full dark:bg-sky-400/30"})]}),(0,t.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-slate-900 dark:text-slate-200",children:e})]})}function p(a){var e=a.children;return(0,t.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,t.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-rose-400 text-white flex items-center justify-center ring-2 ring-rose-400 dark:bg-red-400 dark:ring-red-400",children:[(0,t.jsx)("svg",{width:"6",height:"6",className:"overflow-visible","aria-hidden":"true",children:(0,t.jsx)("path",{d:"M0 0L6 6M6 0L0 6",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,t.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-rose-200 rounded-full dark:bg-red-200/25"})]}),(0,t.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-slate-900 dark:text-slate-200",children:e})]})}function c(a){var e=a.children;return(0,t.jsxs)("div",{className:"not-prose mt-6 -mb-1 flex space-x-2",children:[(0,t.jsx)("svg",{className:"flex-none w-5 h-5 text-slate-400 dark:text-slate-600",viewBox:"0 0 20 20",fill:"currentColor","aria-hidden":"true",children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",clipRule:"evenodd"})}),(0,t.jsx)("p",{className:"text-slate-700 text-sm font-medium dark:text-slate-200",children:e})]})}},53339:function(a,e,n){"use strict";n.d(e,{L:function(){return i}});var t=n(26042),s=n(85893),p=n(21744),c=n(99440),o=n(54713);function i(a){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(c.Dx,{children:a.layoutProps.meta.metaTitle||a.layoutProps.meta.title}),(0,s.jsx)(p.C,(0,t.Z)({nav:o.u},a))]})}i.nav=o.u}},function(a){a.O(0,[9744,8555,2474,4713,9774,2888,179],function(){return a(a.s=72253)}),_N_E=a.O()}]);